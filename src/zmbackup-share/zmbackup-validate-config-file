#!/bin/bash
################################################################################
# zmbackup - Bash script to hot backup and hot restore Zimbra Collaboration
#            Suite Opensource
#
# Copyright (C) 2017 Lucas Costa Beyeler <lucas.costab@outlook.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of version 2 of the GNU General Public
# License as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
#
################################################################################
# zmbackup-validate-config-file:
#
# 13/03/2017 - Version 1.0.1 -  By Lucas Costa Beyeler
#                               <lucas.beyeler@4linux.com.br>
#                               <lucas.costab@outlook.com>
################################################################################
# parallel:
#
#   O. Tange (2011): GNU Parallel - The Command-Line Power Tool,
#  ;login: The USENIX Magazine, February 2011:42-47.
#
################################################################################
# CHECK IF THE ZMBACKUP.CONF IS CONFIGURED CORRECTLY
################################################################################
export ERROR_STATUS='0'

validate()
{
  if ! [ -f "/etc/zmbackup/zmbackup.conf" ]; then
    echo "zmbackup.conf not found - Please run the install.sh to recreate the zmbackup.conf"
    ERROR_STATUS='1'
  else
    source /etc/zmbackup/zmbackup.conf
  fi
  if ! [ -z "$BACKUPUSER" ]; then
  	if [ "$(id -u)" != "$(id -u $BACKUPUSER)" ]; then
  		echo "You need to be $BACKUPUSER to run this script"
  		ERROR_STATUS='1'
  	fi
  else
  	echo "You need to define the variable BACKUPUSER"
  	ERROR_STATUS='1'
  fi

  if ! [ -z "$WORKDIR" ]; then
          if ! [ -d "$WORKDIR" ]; then
                  echo "The directory $WORKDIR doesn't exist"
                  ERROR_STATUS='1'
          fi
  else
          echo "You need to define the variable WORKDIR"
          ERROR_STATUS='1'
  fi

  if [ -z "$ADMINUSER" ]; then
          echo "You need to define the variable ADMINUSER"
          ERROR_STATUS='1'
  fi

  if [ -z "$ADMINPASS" ]; then
          echo "You need to define the variable ADMINPASS"
          ERROR_STATUS='1'
  fi

  if [ -z "$LDAPSERVER" ]; then
          echo "You need to define the variable LDAPSERVER"
          ERROR_STATUS='1'
  fi

  if [ -z "$LDAPADMIN" ]; then
          echo "You need to define the variable LDAPADMIN"
          ERROR_STATUS='1'
  fi

  if [ -z "$LDAPPASS" ]; then
          echo "You need to define the variable LDAPPASS"
          ERROR_STATUS='1'
  fi

  if [ -z "$ROTATE_TIME" ]; then
          echo "You need to define the variable ROTATE_TIME"
          ERROR_STATUS='1'
  fi

  if [ "$ERROR_STATUS" == "1" ]; then
    exit 0
  fi
}
